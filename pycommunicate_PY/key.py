"""
简单的加解密测试验证。
"""

# Example values for demonstration
# In practice, p and q should be large prime numbers
p = 177024660515984395574887708373346077042047660620918870510599748597532479233153622677421815400243669337934407023798923161426497089633752878104085091987351563008460541900549362756254354732981153232516873655807134772034100769510370812378820567487445103232750198728744591903452468456315795430914124120121143406341
q = 168461849860468025814731814479820099934833424535871348294710386248658564781455075306332443483510064320310882277214761365011377163492480225246065452246930148294682392898775561997023265907115960833689080096225607343971830451051417642856966763616847786529282549378828506425282457838582261674467157464041002328923

N = p * q  # Modulus
phi_N = (p - 1) * (q - 1)  # Euler's totient function

# Common value for public key exponent
# 私钥

D = 7995948214039938816275632679574496967206984410697060160175554643104344687677115432883715022818293265614752486396939053471447521715787154919721288641000511456282378837588002783038499188032034620318579249457663277156226198422373772226828066549898579035039560427936332154685252810779651252372464437313698306888257524139832444333558874497701126839767566641081998613225668364690656906004051361683841928220427528552263357876883715902687877033406902940010064383757799662814060376072371490871358024967137711371265550277910145700586781237992196641357837399153857252671358636925816271920764499828504153837599297097882173640353

shouquanma = 4211834239014690574889776828858071396300986130831877492181824368420253581661676979109442802524994375084607794275083509667889165182874953504043704072054135761128250242255442752069098908558546182703074618523570640634831946808237287176400578233900204197047503391701450197047714642126439551086263514036454884673700518218291542490349990322646448579392819601158984064307234000982380592397246276371137384506095252635244554011294755051472246734588040367629149732344372283601473173384089562961229766614580514176239489254213120853070717238840704628272208878246283657756074362600874198962235924354366171367033130579752625330705

def quick_e(a, n, m):
    r = 1
    a = a % m
    while(n):
        if n & 1:
            r = (r * a) % m
        a = (a * a) % m
        n = n >> 1
    return r



def encryption(M):
    r = quick_e(M, D, N)
    return r


if __name__ == "__main__":
    # print(N)
    M = 912760809347527520140088393098178
    M = input("请输入待加密/解密的报文：")
    b = encryption(int(M))
    print("解密/加密：", b)
